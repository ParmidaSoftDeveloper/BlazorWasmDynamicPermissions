// <auto-generated />
using BlazorWasmDynamicPermissions.Server.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorWasmDynamicPermissions.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220529091706_V2022_05_29_1346")]
    partial class V2022_05_29_1346
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("NOCASE")
                .HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("BlazorWasmDynamicPermissions.Server.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorWasmDynamicPermissions.Server.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("ClaimType");

                    b.HasIndex("ClaimType", "ClaimValue")
                        .IsUnique();

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("BlazorWasmDynamicPermissions.Server.Entities.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessTokenSerialNumber")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("RefreshTokenSerialNumber")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccessTokenSerialNumber")
                        .IsUnique();

                    b.HasIndex("RefreshTokenSerialNumber")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("UserUserClaim", b =>
                {
                    b.Property<int>("UserClaimsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserClaimsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserUserClaim");
                });

            modelBuilder.Entity("BlazorWasmDynamicPermissions.Server.Entities.UserToken", b =>
                {
                    b.HasOne("BlazorWasmDynamicPermissions.Server.Entities.User", "User")
                        .WithOne("UserToken")
                        .HasForeignKey("BlazorWasmDynamicPermissions.Server.Entities.UserToken", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserUserClaim", b =>
                {
                    b.HasOne("BlazorWasmDynamicPermissions.Server.Entities.UserClaim", null)
                        .WithMany()
                        .HasForeignKey("UserClaimsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorWasmDynamicPermissions.Server.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorWasmDynamicPermissions.Server.Entities.User", b =>
                {
                    b.Navigation("UserToken")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
